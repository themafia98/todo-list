{"version":3,"sources":["todoModal.js","todoView.js","todoController.js","appInit.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["\r\nclass ListModal{\r\n\r\n    constructor(num,string){\r\n        this.number = num;\r\n        this.todo = string;\r\n    }\r\n}\r\n\r\nclass Storage extends ListModal{\r\n    constructor(){\r\n        super();\r\n        this.arrayList = [];\r\n    }\r\n\r\n    store(stringTodo){\r\n        (stringTodo) && (this.arrayList.push(stringTodo));\r\n        localStorage.list = this.arrayList.join();\r\n        (localStorage.newTodo) && (localStorage.removeItem('newTodo'));\r\n    }\r\n\r\n    resetStore(){\r\n        localStorage.clear();\r\n    }\r\n\r\n    updateStorage(key, current){\r\n        this.arrayList = [];\r\n        current.forEach(element => {\r\n            this.arrayList.push(element.innerHTML);\r\n        });\r\n        localStorage[key] = this.arrayList.join();\r\n    }\r\n}","\r\nclass View {\r\n\r\n    constructor({appID,title}){\r\n        this.ID = appID;\r\n        this.title = title;\r\n    }\r\n}\r\n\r\nclass Todo extends View {\r\n\r\n    constructor(settingsTodo){\r\n        super(settingsTodo);\r\n    }\r\n\r\n    build(){\r\n        let wrapper = document.createElement('div');\r\n        wrapper.classList.add('wrapper');\r\n\r\n        let footer = document.createElement('div');\r\n        footer.classList.add('footer');\r\n\r\n        let section = document.createElement('div');\r\n        section.classList.add('section');\r\n\r\n        let todoList = document.createElement('div');\r\n        todoList.classList.add('todoList');\r\n\r\n        let titleName = document.createElement('h1');\r\n        titleName.classList.add('title');\r\n        titleName.innerHTML = this.title;\r\n\r\n        let titleTodoList = document.createElement('h3');\r\n        titleTodoList.classList.add('todoList__title');\r\n        titleTodoList.innerHTML = 'list'.toLocaleUpperCase();\r\n\r\n        let todoControllers = document.createElement('div');\r\n        todoControllers.classList.add('controllers');\r\n\r\n        let input = document.createElement('input');\r\n        input.setAttribute('type','text');\r\n        input.classList.add('getTodo');\r\n        input.setAttribute('placeholder','What should you do today?');\r\n\r\n        let button = document.createElement('input');\r\n        button.setAttribute('type','button');\r\n        button.classList.add('setTodo');\r\n        button.setAttribute('value','ADD');\r\n\r\n        footer.appendChild(titleName);\r\n\r\n        todoControllers.appendChild(input);\r\n        todoControllers.appendChild(button);\r\n\r\n        todoList.appendChild(titleTodoList);\r\n        section.appendChild(todoList);\r\n\r\n        wrapper.appendChild(footer);\r\n        wrapper.appendChild(todoControllers);\r\n        wrapper.appendChild(section);\r\n        this.ID.appendChild(wrapper);\r\n    }\r\n\r\n    showNewTodo(value){\r\n    let arrayTodo = value.split(',');\r\n    let here = document.querySelector('.todoList');\r\n    let oldTodo = document.querySelectorAll('p');\r\n\r\n    if (oldTodo.length){\r\n        debugger;\r\n        oldTodo.forEach(element => {\r\n            element.remove();\r\n        });;\r\n    }\r\n  \r\n\r\n    for (let i = 0; i < arrayTodo.length; i++){\r\n\r\n    let todoList = document.createElement('p');\r\n    todoList.dataset.num = i;\r\n    todoList.innerHTML = arrayTodo[i];\r\n    here.appendChild(todoList);\r\n    }\r\n\r\n    }\r\n\r\n}","class TodoControl extends Storage{\r\n\r\n    constructor({btn,controllerEnter}){\r\n    super();\r\n    this.btnEnter = controllerEnter;\r\n    this.btnAdd = btn;\r\n    }\r\n\r\n    setLsitener(todoView){\r\n        document.addEventListener('click',(e) =>{\r\n            if (e.target.classList[0] === 'setTodo') {\r\n            localStorage.setItem('newTodo',this.btnEnter.value);\r\n            this.store(localStorage.newTodo);\r\n            todoView.showNewTodo(localStorage.list);\r\n            }\r\n\r\n            if (e.target.dataset.num) {\r\n               let splits = localStorage.list.split(',');\r\n               let currentTodo = null;\r\n\r\n               if (splits.some((item) => item === e.target.innerHTML)) {\r\n                   debugger;\r\n                e.target.remove();\r\n                currentTodo = document.querySelectorAll('[data-num]');\r\n                this.updateStorage('list',currentTodo);\r\n               }\r\n            }\r\n\r\n        },false);\r\n        window.addEventListener('storage',(v) => {\r\n            debugger;\r\n            (v.key === 'list') && (showNewTodo(todoView.newValue));\r\n        },false);\r\n\r\n        window.addEventListener('DOMContentLoaded',() =>{\r\n            (localStorage.list) && (this.store(localStorage.list));\r\n            (localStorage.list) && (todoView.showNewTodo(localStorage.list));\r\n        },false);\r\n    }\r\n}","\r\n(function(){\r\n\r\n    function building(){\r\n        let settingsTodo = {\r\n            appID: document.getElementById('todo'),\r\n            title:'Todo-list'\r\n        }\r\n\r\n        let todoView = new Todo(settingsTodo);\r\n        todoView.build();\r\n    }\r\n\r\n    function controllers() {\r\n        let settingsController = {\r\n            controllerEnter: document.querySelector('.getTodo'),\r\n            btn: document.querySelector('.setTodo')\r\n        }\r\n\r\n        let controller = new TodoControl(settingsController);\r\n        controller.setLsitener(todoView);\r\n    }\r\n\r\n    function main() {\r\n        let storageData = new Storage();\r\n\r\n        building();\r\n        controllers();\r\n    }\r\n\r\n    return todo = { init: main }\r\n\r\n})();\r\n\r\ntodo.init();"]}