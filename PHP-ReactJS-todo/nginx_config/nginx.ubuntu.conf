
# auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}


http {
    include	/etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';

    server {
        # listen on port 80
        listen 80;

        # save logs here
	client_max_body_size 200m;
        access_log /var/log/nginx/access.log compression;
 
        # what file to server as index
        index index.html index.htm;
	
	fastcgi_buffering off;

	location ~ ^/api/(.*)?$ {
		root /var/applications/todo-list/PHP-ReactJS-todo/;    
		fastcgi_split_path_info ^(.+?\.php)(/.*)$;
		


		index index.php;
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME $document_root/api/index.php;
		include fastcgi_params;
		fastcgi_pass 127.0.0.1:9000;
	}

        location / {
		root /var/applications/todo-list/PHP-ReactJS-todo/client;
		proxy_pass http://192.168.254.1:3000;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-for $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $remote_addr;
		proxy_set_header X-Forwarded-Protocol $scheme;
		proxy_redirect off;

		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";	
        }
	
	location /socket.io {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_pass http://localhost:3000;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
	}

    }
}
